#include "NXCDefs.h"
#include "lib/LSA-lib.nxc"

#define SENS_PORT IN_2
#define SENS_CODE 0x14

unsigned byte sens[8];

void init () {
  // set up sensorArray
  SetSensorLowspeed(SENS_PORT);
  LSA_WakeUp(SENS_PORT, SENS_CODE);
}

void CorrectSens (byte &array[]) {
  for (int i=0; i < 8; i++) {
    if (array[i] < 0) {
      array[i] = 0;
    }
    else if (array[i] > 100) {
      array[i] = 100;
    }
    array[i] = 100 - array[i];
  }
}

void Debug (string name, int num, int line, int x = 0, bool clear = true) {
  switch (line) {
    case 1:
      line = LCD_LINE1;
      break;
    case 2:
      line = LCD_LINE2;
      break;
    case 3:
      line = LCD_LINE3;
      break;
    case 4:
      line = LCD_LINE4;
      break;
    case 5:
      line = LCD_LINE5;
      break;
    case 6:
      line = LCD_LINE6;
      break;
    case 7:
      line = LCD_LINE7;
      break;
    case 8:
      line = LCD_LINE8;
      break;
  }
  string toDebug;
  toDebug = name + ": "+NumToStr(num);
  if (clear) {
    ClearLine(line);
  }
  TextOut(x,line,toDebug);
}

bool needFix (unsigned byte sensor[]) {
  bool ret = true;
  int i;
  for (int i=0; i<8; i++) {
    if (sensor[i] == 0) {
      ret = false;
      break;
    }
  }
  return ret;
}

void valueFixer(unsigned byte &sensor[]) {

  int black1 = 0;
  int black2 = 1;
  int black3 = 2;
  int tmp1;
  int tmp2;
  int tmp3;
  int i;
  int change;
  int fin = false;
  
  while (true) {
    change = 0;
    for (i=0;i<8;i++) {
      if (sensor[i] > sensor[black1]) {
        tmp1 = black1;
        black1 = i;
        tmp2 = black2;
        black2 = tmp1;
        black3 = tmp2;
        change = change + 1;
      }
      else if (i != black1 && sensor[i] > sensor[black2]) {
        tmp2 = black2;
        black2 = i;
        black3 = tmp2;
        change = change + 1;
      }
      else if (i != black1 && i != black2 && sensor[i] > sensor[black3]) {
        black3 = i;
        change = change + 1;
      }
    }
    if (change == 0) {
      break;
    }
  }

  for (i=0;i<8;i++) {
    if (i == black1 || i == black2 || i == black3) {
      sensor[i] = 100;
    }
    else {
      sensor[i] = 0;
    }
  }

  /*Debug("black1",black1,1);
  Debug("black2",black2,2);
  Debug("black3",black3,3);*/
  
  /*Debug("sen1",sensor[0],1);
  Debug("sen2",sensor[1],2);
  Debug("sen3",sensor[2],3);
  Debug("sen4",sensor[3],4);
  Debug("sen5",sensor[4],5);
  Debug("sen6",sensor[5],6);
  Debug("sen7",sensor[6],7);
  Debug("sen8",sensor[7],8);*/
}

task main () {
  init();
  while (true) {
    if (LSA_ReadRaw_Calibrated (SENS_PORT, SENS_CODE, sens));
      CorrectSens(sens);
      Debug("needFix",needFix(sens),1);
      //valueFixer(sens);
    }
  }
}
