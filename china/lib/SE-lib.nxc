/************************************************************************/
/*                                                                      */
/* Program Name: LL-test.nxc */
/* =============================                                        */
/*                                                                      */
/* Copyright (c) 2008 by mindsensors.com                                */
/* Email: info (<at>) mindsensors (<dot>) com                           */
/*                                                                      */
/* This program is free software. You can redistribute it and/or modify */
/* it under the terms of the GNU General Public License as published by */
/* the Free Software Foundation; version 3 of the License.              */
/* Read the license at: http://www.gnu.org/licenses/gpl.txt             */
/*                                                                      */
/************************************************************************/
/*
 * When        Who             Comments
 * 04/20/09    Deepak Patil    Initial authoring.
 */

#define SE_NONE  0
#define SE_FRONT 1
#define SE_LEFT 2
#define SE_RIGHT 3

byte currRange;

string SE_OBZoneToString(int ob)
{
  switch (ob) {
    case SE_NONE:
		return "NONE";
		break;
		case SE_FRONT:
		return "FRONT";
		break;
		case SE_LEFT:
		return "LEFT";
		break;
		case SE_RIGHT:
		return "RIGHT";
		break;
	}
}

int SumoEyes_DetectObstacleZone(byte port)
{
  int se_value;

  se_value = SensorNormalized(port);
	se_value = se_value * 100 / 1023;

 	if ( se_value > 30 && se_value < 36 ) {
	  // obstacle is on left
    return (SE_LEFT);
	}
	if ( se_value > 63 && se_value < 69 ) {
	  // obstacle is on right
    return (SE_RIGHT);
	}
	if ( se_value >= 74 && se_value <= 80 ) {
	  // obstacle is in front.
    return (SE_FRONT);
	}
	return (SE_NONE);
}

void SumoEyes_SetLongRange(byte port)
{
   SetSensorType(port, SENSOR_TYPE_LIGHT_INACTIVE);
   SetSensorMode(port, SENSOR_MODE_PERCENT);
   if ( currRange != SENSOR_TYPE_LIGHT_INACTIVE) {
      ResetSensor(port);
      Wait (275);
   }
   currRange = SENSOR_TYPE_LIGHT_INACTIVE;
}

void SumoEyes_SetShortRange(byte port)
{
   SetSensorType(port, SENSOR_TYPE_LIGHT_ACTIVE);
   SetSensorMode(port, SENSOR_MODE_PERCENT);
   if ( currRange != SENSOR_TYPE_LIGHT_ACTIVE) {
      ResetSensor(port);
      Wait (275);
   }
   currRange = SENSOR_TYPE_LIGHT_ACTIVE;
}
